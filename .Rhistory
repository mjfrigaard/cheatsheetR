# Chunk 39: names-key-png
knitr::include_graphics("www/names-key.png")
# Chunk 40: values-value.png
knitr::include_graphics("www/values-value.png")
# Chunk 41: prepare-unite
table5 <- tibble::tribble(
~country, ~century, ~year,
"Afghanistan",     "19",  "99",
"Afghanistan",     "20",  "00",
"Brazil",     "19",  "99",
"Brazil",     "20",  "00")
# Chunk 42: table5
table5
# Chunk 43: unite
# enter the new "year" column and use an empty space ("") to separate the values
tidyr::unite(data = table5,
# columns to unite
century, year,
# new column name
col = ,
# what to separate them by
sep = )
# Chunk 45: unite-png
knitr::include_graphics("www/unite.png")
# Chunk 46: prepare-table3
table3 <- tibble::tribble(
~country, ~year,             ~rate,
"Afghanistan", 1999L,    "745/19987071",
"Afghanistan", 2000L,   "2666/20595360",
"Brazil", 1999L, "37737/172006362",
"Brazil", 2000L, "80488/174504898")
# Chunk 47: table3
table3
# Chunk 48: separate
separate(data = table3,
# what column to break apart
col = rate,
# columns the new values should end up in
into = c(" ", " "),
# what to separate on
sep = " ")
# Chunk 50: separate-png
knitr::include_graphics("www/separate.png")
# Chunk 51: regex-example-group-1
str_view(string = table3$rate, "([[:alnum:]]+)")
# Chunk 52: regex-example-group-2
str_view(string = table3$rate, "/([[:alnum:]]+)")
# Chunk 53: extract
extract(table3,
# what column to extract the values from
col = ,
# where the new values should end up
into = ,
# regular expression that creates groups
regex = "([[:alnum:]]+)/([[:alnum:]]+)")
# Chunk 55: extract-png
knitr::include_graphics("www/extract.png")
# Chunk 56: separate_rows
separate_rows(data = table3,
, # column to separate values below
sep = "")
# Chunk 58: separate-rows-png
knitr::include_graphics("www/separate_rows.png")
# Chunk 59: prepare-missing-X
X <- tibble::tribble(
~x1,   ~x2,
"A",    1L,
"B",    NA,
"C",    NA,
"D",    3L,
"E",    NA
)
# Chunk 60: prepare-starships
starships <- tibble::tribble(
~name,       ~starships_1,               ~starships_2,       ~starships_3,
"Luke Skywalker",           "X-wing",         "Imperial shuttle",                 NA,
"Darth Vader",  "TIE Advanced x1",                         NA,                 NA,
"Obi-Wan Kenobi", "Jedi starfighter", "Trade Federation cruiser", "Naboo star skiff"
)
# Chunk 61: explore-X
# explore the X tibble
# Chunk 62: drop_na
drop_na(data = )
# Chunk 64: drop_na-png
knitr::include_graphics("www/drop_na.png")
# Chunk 65: fill
fill(data = , )
# Chunk 67: prepare-profits
profits <- tibble::tribble(
~year, ~quarter, ~profits,
NA,     "Q1",     1494,
NA,     "Q2",     2314,
NA,     "Q3",     1937,
"2019",     "Q4",     1722,
NA,     "Q1",     1494,
NA,     "Q2",     1931,
NA,     "Q3",     2364,
"2020",     "Q4",     2920)
# Chunk 68: explore-profits
# explore profits
# Chunk 69: fill-up
# fill up!
fill(data = ,
,
.direction =
)
# Chunk 71: fill-down-png
knitr::include_graphics("www/fill-down.png")
# Chunk 72: fill-up-png
knitr::include_graphics("www/fill-up.png")
# Chunk 73: replace_na
replace_na(data = X, replace = list(x2 = 2))
# Chunk 74: prepare-cumdf
scores <- tibble::tribble(
~year, ~score,
2017,     NA,
2018,      3,
2019,     NA,
2020,      3,
2021,     NA,
2022,      3)
cum_scores <- tibble::tribble(
~year, ~score, ~total,
2017,     NA,     NA,
2018,      3,      3,
2019,     NA,     NA,
2020,      3,      6,
2021,     NA,     NA,
2022,      3,      9)
# Chunk 75: explore-scores
# explore scores
# Chunk 76: replace_na-scores
replace_na(data = ,
replace = list( = ))
# Chunk 77: explore-cum_scores
# explore cum_scores
# Chunk 78: recreate_cum_scores
tibble::tribble(
~year, ~score, ~total,
2017,      0,      0,
2018,      3,      3,
2019,      0,      3,
2020,      3,      6,
2021,      0,      6,
2022,      3,      9
)
# Chunk 79: fix-cum_scores
# replace missing total values
# Chunk 81: replace_na-png
knitr::include_graphics("www/replace_na.png")
# Chunk 82: prepare-expand-X
X <- tibble::tribble(
~x1,   ~x2,    ~x3,
"A",    1L,     3L,
"B",    1L,     4L,
"B",    2L,     3L
)
# Chunk 83: explore-expand-X
# explore the X data
# Chunk 84: expand
expand(data = )
# Chunk 86: expand-png
knitr::include_graphics("www/expand.png")
# Chunk 87: anti_join-distinct
dplyr::anti_join(
# our expanded tibble
x = expand(data = X, x1, x2),
# original distinct values
y = dplyr::distinct(X, x1, x2))
# Chunk 88: prepare-complete-X
X <- tibble::tribble(
~x1,   ~x2,    ~x3,
"A",    1L,     3L,
"B",    1L,     4L,
"B",    2L,     3L
)
# Chunk 89: complete-display-X
X <- tibble::tribble(
~x1,   ~x2,    ~x3,
"A",    1L,     3L,
"B",    1L,     4L,
"B",    2L,     3L
)
gt::gt(X)
# Chunk 90: complete
complete(data = , )
X
expand(data = X, x1, x2)
complete(data = X, x1, x2)
knitr::include_graphics("www/complete.png")
allhiphop90s <- tribble(
~year, ~artist, ~albums,
1996, "Wu-Tang Clan", NA,
1996, "2Pac", 2L,
1996, "DMX", NA,
1997, "Wu-Tang Clan", 1L,
1997, "2pac", 1L,
1997, "DMX", NA,
1998, "Wu-Tang Clan", 1L,
1998, "2Pac", NA,
1998, "DMX", 2L
)
hiphop90s <- drop_na(allhiphop90s)
gt::gt(hiphop90s)
allhiphop90s <- tribble(
~year, ~artist, ~albums,
1996, "Wu-Tang Clan", NA,
1996, "2Pac", 2L,
1996, "DMX", NA,
1997, "Wu-Tang Clan", 1L,
1997, "2pac", 1L,
1997, "DMX", NA,
1998, "Wu-Tang Clan", 1L,
1998, "2Pac", NA,
1998, "DMX", 2L
)
hiphop90s <- drop_na(allhiphop90s)
gt::gt(hiphop90s)
datapasta::tribble_paste(hiphop90s)
allhiphop90s <- tribble(
~year, ~artist, ~albums,
1996, "2Pac", 2L,
1996, "DMX", NA,
1997, "2pac", 1L,
1997, "DMX", NA,
1998, "2Pac", NA,
1998, "DMX", 2L
)
hiphop90s <- drop_na(allhiphop90s)
datapasta::tribble_paste(hiphop90s)
allhiphop90s <- tribble(
~year, ~artist, ~albums,
1996, "Wu-Tang Clan", NA,
1996, "2Pac", 2L,
1997, "Wu-Tang Clan", 1L,
1997, "2pac", 1L
)
hiphop90s <- drop_na(allhiphop90s)
datapasta::tribble_paste(hiphop90s)
hiphop90s <- tribble(
~year, ~artist, ~albums,
1996, "2Pac", 2L,
1997, "Wu-Tang Clan", 1L,
1997, "2pac", 1L
)
complete(data = hiphop90s, year, artist)
hiphop90s <- tribble(
~year, ~artist, ~albums,
1996, "2Pac", 2L,
1997, "Wu-Tang Clan", 1L,
1997, "2Pac", 1L
)
complete(data = hiphop90s, year, artist)
complete(hiphop90s,
year,
artist = c("2Pac", "Wu-Tang Clan", "Dr. Dre"),
fill = list(albums = 0L))
complete(hiphop90s,
year,
# add Dre to the list of artists
artist = c("2Pac", "Wu-Tang Clan", "Dr. Dre"),
# replace missing values with 0L
fill = list())
complete(hiphop90s,
year,
# add Dre to the list of artists
artist = c("2Pac", "Wu-Tang Clan", "Dr. Dre"),
# replace missing values with 0L
fill = list(albums = 0L))
complete(hiphop90s,
year,
# add Dre to the list of artists
artist = c("2Pac", "Wu-Tang Clan", "Dr. Dre"),
# replace missing values with 0L
fill = list(albums = 0L))
renv::status()
library(learnr)
library(tidyverse)
library(googlesheets4)
library(skimr)
library(knitr)
library(readxl)
library(reactable)
library(writexl)
library(openxlsx)
library(fivethirtyeight)
library(datapasta)
library(gt)
library(flextable)
# pipe url: ----
# https://bit.ly/01-file-txt
# CSV url: ----
# https://bit.ly/01-file-csv
# CSV2 url: ----
# https://bit.ly/01-file2-csv
# TSV url: ----
# https://bit.ly/01-file-tsv
# f1.csv: ----
# https://bit.ly/01-f1-csv
# f2.csv: ----
# https://bit.ly/01-f2-csv
# f3.csv: ----
# https://bit.ly/01-f3-csv
knitr::opts_chunk$set(
upload.fun = imgur_upload,
error = TRUE,
exercise.cap = "tidyr")
knitr::include_graphics(path = "www/2p-tidyr.png")
knitr::include_graphics(path = "www/tidy-data.png")
knitr::include_graphics("www/columns.png")
knitr::include_graphics("www/rows.png")
knitr::include_graphics("www/values.png")
knitr::include_graphics("www/tibble.png")
# create tibble below with:
#  x is 1, 2, 3
#  y is "a", "b", "c"
nums <- # create nums with values 1, 2, and 3
chars <- # create chars with values "a", "b", and "c"
tibble(x = ,
y = )
library(learnr)
library(tidyverse)
library(googlesheets4)
library(skimr)
library(knitr)
library(readxl)
library(reactable)
library(writexl)
library(openxlsx)
library(fivethirtyeight)
library(datapasta)
library(gt)
library(flextable)
# pipe url: ----
# https://bit.ly/01-file-txt
# CSV url: ----
# https://bit.ly/01-file-csv
# CSV2 url: ----
# https://bit.ly/01-file2-csv
# TSV url: ----
# https://bit.ly/01-file-tsv
# f1.csv: ----
# https://bit.ly/01-f1-csv
# f2.csv: ----
# https://bit.ly/01-f2-csv
# f3.csv: ----
# https://bit.ly/01-f3-csv
knitr::opts_chunk$set(
upload.fun = imgur_upload,
error = TRUE,
exercise.cap = "tidyr")
knitr::include_graphics(path = "www/2p-tidyr.png")
knitr::include_graphics(path = "www/tidy-data.png")
knitr::include_graphics("www/columns.png")
knitr::include_graphics("www/rows.png")
knitr::include_graphics("www/values.png")
knitr::include_graphics("www/tibble.png")
# create tibble below with:
#  x is 1, 2, 3
#  y is "a", "b", "c"
nums <- # create nums with values 1, 2, and 3
chars <- # create chars with values "a", "b", and "c"
tibble(x = ,
y = )
library(dplyr)
starwars <- dplyr::starwars
reactable::reactable(starwars, compact = TRUE, columns = colDef(align = "left"))
names(starwars)
datapasta::vector_paste_vertical(names(starwars))
reactable::reactable(starwars,
compact = TRUE,
columns = list(
name = colDef(name = "NAME")))
# height,
# mass,
# hair_color,
# skin_color,
# eye_color,
# birth_year,
# sex,
# gender,
# homeworld,
# species,
# films,
# vehicles,
# starships))
reactable::reactable(starwars,
compact = TRUE,
columns = list(
name = colDef(name = "name", sticky = "right")))
# height,
# mass,
# hair_color,
# skin_color,
# eye_color,
# birth_year,
# sex,
# gender,
# homeworld,
# species,
# films,
# vehicles,
# starships))
reactable::reactable(starwars,
compact = TRUE,
columns = list(
name = colDef(name = "name", sticky = "left")))
# height,
# mass,
# hair_color,
# skin_color,
# eye_color,
# birth_year,
# sex,
# gender,
# homeworld,
# species,
# films,
# vehicles,
# starships))
library(dplyr)
swdata <- select(dplyr::starwars, name, homeworld, species, films, vehicles, starships)
# datapasta::vector_paste_vertical(names(starwars))
reactable::reactable(swdata,
compact = TRUE,
columns = list(
name = colDef(name = "name", sticky = "left")))
# height,
# mass,
# hair_color,
# skin_color,
# eye_color,
# birth_year,
# sex,
# gender,
# homeworld,
# species,
# films,
# vehicles,
# starships))
library(dplyr)
swdata <- select(dplyr::starwars,
name, homeworld, species, films, vehicles, starships)
swdata <- head(swdata, n = 5)
# datapasta::vector_paste_vertical(names(starwars))
reactable::reactable(swdata,
compact = TRUE,
columns = list(
name = colDef(name = "name", sticky = "left")))
# height,
# mass,
# hair_color,
# skin_color,
# eye_color,
# birth_year,
# sex,
# gender,
# homeworld,
# species,
# films,
# vehicles,
# starships))
datapasta::tribble_paste(swdata)
datapasta::df_paste(swdata)
dput(swdata)
styler:::style_active_file()
styler:::style_selection()
swdata <- structure(list(
name = c(
"Luke Skywalker", "C-3PO", "R2-D2", "Darth Vader",
"Leia Organa"
), homeworld = c(
"Tatooine", "Tatooine", "Naboo",
"Tatooine", "Alderaan"
), species = c(
"Human", "Droid", "Droid",
"Human", "Human"
), films = list(c(
"The Empire Strikes Back",
"Revenge of the Sith", "Return of the Jedi", "A New Hope", "The Force Awakens"
), c(
"The Empire Strikes Back", "Attack of the Clones", "The Phantom Menace",
"Revenge of the Sith", "Return of the Jedi", "A New Hope"
), c(
"The Empire Strikes Back",
"Attack of the Clones", "The Phantom Menace", "Revenge of the Sith",
"Return of the Jedi", "A New Hope", "The Force Awakens"
), c(
"The Empire Strikes Back",
"Revenge of the Sith", "Return of the Jedi", "A New Hope"
), c(
"The Empire Strikes Back",
"Revenge of the Sith", "Return of the Jedi", "A New Hope", "The Force Awakens"
)), vehicles = list(
c("Snowspeeder", "Imperial Speeder Bike"),
character(0), character(0), character(0), "Imperial Speeder Bike"
),
starships = list(
c("X-wing", "Imperial shuttle"), character(0),
character(0), "TIE Advanced x1", character(0)
)
), row.names = c(
NA,
-5L
), class = c("tbl_df", "tbl", "data.frame"))
reactable::reactable(data = swdata,
compact = TRUE,
columns = list(
name = colDef(name = "name", sticky = "left")))
# view the swdata tibble
typeof(x = swdata)
knitr::include_graphics("www/names-key.png")
